Тестовое задание.
Разработать Telegram бота, который может сохранять сообщения пользователей, хранить их в базе и выдавать уже сохраненные сообщения по запросу пользователя.
1. Создать MySQL базу данных, состоящую из нескольких таблиц (+ предоставить код создания таблиц и сами таблицы с данными для тестирования в sql файле):
	Необходимо хранить в базе:
        - пользователей/группы, которые обращались к боту
        - дату/время первого обращения
        - сами сообщения,  их идентификаторы, даты/время сообщений
        - реализовать работу с тэгами, где по тэгу #текст_тэга (если он есть в тексте сообщения) можно найти все сообщения с этим тэгом
        - несколько тэгов должны иметь описание в базе, например: "#python - высокоуровневый язык программирования, ориентированный на повышение производительности разработчика и читаемости кода"
2. Создать telegram bot. Написать следующий функционал на языке Python 2.7 (без использования сторонних Telegram библиотек и фреймворков, можно пользоваться curl и ему подобными):
	2.1. Команда /start сохраняет telegram id пользователя в базу и присваивает пользователю id.
	2.2. Команда /write записывает сообщение после команды в таблицу messages, присваивает ему id, запоминает, что данное сообщение является последним для данного пользователя, выводит после исполнения команды текст "заметка <id> сохранена".
	2.3. Команда /read_last выводит последнее сообщение данного пользователя.
	2.4. Команда /read <id> выводит поле сообщение с указанным id. Если такового нет, то выводит текст "заметка <id> не найдена", либо "заметка <id> принадлежит другому пользователю", если была попытка прочитать заметку другого пользователя.
	2.5. Команда /read_all выводит все заметки текущего пользователя бота по порядку от самого старого до самого нового.
	2.6. Команда /read_tag <tag> выводит все заметки по указанному тэгу в сообщении (в одном сообщении тэгов может быть несколько, например "Компания #Уфанет предупреждает, что вещатель проводит работы на следующих каналах: #Россия1 и #СТС").
	2.7. Команда /tag <tag_1>,<tag_2>...<tag_n> выводит описание введенных тэгов.
	2.8. Команда /tag_all выводит описание всех тэгов.
	2.9. Предусмотреть логирование в отдельный файл всех сообщений, которые были доставлены боту с указанием id пользователя, тела сообщения, времени отправки.

Для обращения к Telegram НЕ исользовать веб-сокеты и вспомогательные библиотеки (telebot и подобные).
Для обращения к базе данных в коде python использовать SQL запросы без использования ORM.
